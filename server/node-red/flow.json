[
    {
        "id": "e4986bf4e8db6f4f",
        "type": "tab",
        "label": "Rega",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1c65a5681f749b4b",
        "type": "tab",
        "label": "Sensor Data",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3147ab54d30d11bb",
        "type": "tab",
        "label": "Example mongodb4",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f7f9c56481cb8ead",
        "type": "tab",
        "label": "Rocket.Chat",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "33d8cc1cde209e15",
        "type": "tab",
        "label": "NeoAPI",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "d5827538163e2160",
        "type": "mqtt-broker",
        "name": "mqtt estufinha",
        "broker": "192.168.8.5",
        "port": "2001",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "22dba644aa7aea67",
        "type": "rocketchat-server",
        "name": "TexterGreen Rocket Chat",
        "host": "http://192.168.8.5:3000",
        "user": "rzmA7FjfrtksMa27D",
        "token": "SeWh1f38l84ft4CJSm-v5e8HMD48docKqn5h7v0rPdc"
    },
    {
        "id": "a52063e041fa5f04",
        "type": "mqtt-broker",
        "name": "mqtt pomar",
        "broker": "192.168.8.5",
        "port": "2002",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "bcf62987d490788a",
        "type": "mongodb4-client",
        "name": "DataDB - no database",
        "protocol": "mongodb",
        "hostname": "192.168.8.5",
        "port": "27017",
        "dbName": "",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "7b00fa308db70c4e",
        "type": "mongodb4-client",
        "name": "DataDB - test",
        "protocol": "mongodb",
        "hostname": "192.168.8.5",
        "port": "27017",
        "dbName": "test",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "9362c1adaa612ce4",
        "type": "mongodb4-client",
        "name": "DataDB - sensor_data",
        "protocol": "mongodb",
        "hostname": "192.168.8.5",
        "port": "27017",
        "dbName": "sensor_data",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "d489d63adf6c1ab5",
        "type": "ssh-conf",
        "ssh": "",
        "name": "debian",
        "userlabel": "debian"
    },
    {
        "id": "58099b05a48c465b",
        "type": "mongodb4-client",
        "name": "DataDB - logs",
        "protocol": "mongodb",
        "hostname": "192.168.8.5",
        "port": "27017",
        "dbName": "logs",
        "appName": "",
        "authSource": "",
        "authMechanism": "DEFAULT",
        "tls": false,
        "tlsCAFile": "",
        "tlsCertificateKeyFile": "",
        "tlsInsecure": false,
        "connectTimeoutMS": "30000",
        "socketTimeoutMS": "0",
        "minPoolSize": "0",
        "maxPoolSize": "100",
        "maxIdleTimeMS": "0",
        "uri": "",
        "advanced": "{}",
        "uriTabActive": "tab-uri-simple"
    },
    {
        "id": "8a8b31c33402fda6",
        "type": "mqtt in",
        "z": "e4986bf4e8db6f4f",
        "name": "Estufinha estado de rega",
        "topic": "opensprinkler/station/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d5827538163e2160",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 130,
        "y": 260,
        "wires": [
            [
                "e5787f0feb039a39",
                "048419d1290f8af8"
            ]
        ]
    },
    {
        "id": "bca56985bda0039a",
        "type": "rocketchat-out",
        "z": "e4986bf4e8db6f4f",
        "name": "Notify",
        "server": "22dba644aa7aea67",
        "destination": "rooms",
        "room": "general",
        "roomType": "str",
        "avatarText": "",
        "avatarTextType": "str",
        "aliasText": "",
        "aliasTextType": "str",
        "emojiText": "",
        "emojiTextType": "str",
        "messageText": "payload.send",
        "messageTextType": "msg",
        "attachments": "[]",
        "attachmentsType": "json",
        "x": 950,
        "y": 320,
        "wires": []
    },
    {
        "id": "1a5468ce0e3281f3",
        "type": "mqtt in",
        "z": "e4986bf4e8db6f4f",
        "name": "# estufinha",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "d5827538163e2160",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 100,
        "wires": [
            [
                "f33e0e93bb32995b"
            ]
        ]
    },
    {
        "id": "f33e0e93bb32995b",
        "type": "debug",
        "z": "e4986bf4e8db6f4f",
        "name": "debug #estufinha",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 370,
        "y": 100,
        "wires": []
    },
    {
        "id": "9043c1f4f413f0ee",
        "type": "mqtt in",
        "z": "e4986bf4e8db6f4f",
        "name": "# pomar",
        "topic": "#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a52063e041fa5f04",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 80,
        "y": 180,
        "wires": [
            [
                "2e60dd9943d277dc"
            ]
        ]
    },
    {
        "id": "2e60dd9943d277dc",
        "type": "debug",
        "z": "e4986bf4e8db6f4f",
        "name": "debug #pomar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 360,
        "y": 180,
        "wires": []
    },
    {
        "id": "86561de3bf20f467",
        "type": "mqtt in",
        "z": "e4986bf4e8db6f4f",
        "name": "Pomar estado de rega",
        "topic": "opensprinkler/station/#",
        "qos": "2",
        "datatype": "auto-detect",
        "broker": "a52063e041fa5f04",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 120,
        "y": 360,
        "wires": [
            [
                "826bdabff1fd8fe5",
                "205437abe33211af"
            ]
        ]
    },
    {
        "id": "e5787f0feb039a39",
        "type": "debug",
        "z": "e4986bf4e8db6f4f",
        "name": "debug mudanca estufinha",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 240,
        "wires": []
    },
    {
        "id": "205437abe33211af",
        "type": "debug",
        "z": "e4986bf4e8db6f4f",
        "name": "debug mudanca pomar",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 420,
        "wires": []
    },
    {
        "id": "2ec3b4e11c71d1dd",
        "type": "function",
        "z": "e4986bf4e8db6f4f",
        "name": "function 2",
        "func": "var topicParts = msg.topic.split('/');\nvar stationNumber = topicParts.pop();\nmsg.payload.stationNumber = stationNumber;\nlet stationName = context.global[msg.zone+\"_name_\" + stationNumber];\n\n// 0 OFF\n// 1 ON\nif (msg.payload.state === 0) {\n    msg.payload.send = msg.zone+\" :\\nEstação ID: \" + stationNumber + \"\\nEstação Nome: \" + stationName + \"\\nEstado: Esteve ativa por \" + msg.payload.duration + \" segundos.\";\n} else {\n\n    msg.payload.send = msg.zone +\" :\\nEstação ID: \" + stationNumber + \"\\nEstação Nome: \" + stationName + \"\\nEstado: Foi ativada.\";\n}\n\n\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 320,
        "wires": [
            [
                "bca56985bda0039a"
            ]
        ]
    },
    {
        "id": "6d4caeb2995d30b0",
        "type": "inject",
        "z": "e4986bf4e8db6f4f",
        "name": "",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "43200",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 110,
        "y": 600,
        "wires": [
            [
                "573b4f63cccb3ae3",
                "ee3fadc865016954"
            ]
        ]
    },
    {
        "id": "573b4f63cccb3ae3",
        "type": "http request",
        "z": "e4986bf4e8db6f4f",
        "name": "Names OpenSprinkler Pomar",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.8.184:8080/jn?pw=e4a89868b069802aa0cf67419f7dad38",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 320,
        "y": 520,
        "wires": [
            [
                "24d854cde4f0955d"
            ]
        ]
    },
    {
        "id": "ee3fadc865016954",
        "type": "http request",
        "z": "e4986bf4e8db6f4f",
        "name": "Names OpenSprinkler Estufinha",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.8.131:8083/jn?pw=e4a89868b069802aa0cf67419f7dad38",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 330,
        "y": 680,
        "wires": [
            [
                "2fd4a6e8e915dc20"
            ]
        ]
    },
    {
        "id": "6b8885b2fcf3efb5",
        "type": "function",
        "z": "e4986bf4e8db6f4f",
        "name": "Extract Station Names",
        "func": "let snames = msg.payload.snames;\n\nlet stationNames = [];\n\nfor (let i = 0; i < snames.length; i++) {\n    let varName = msg.location + \"_name_\" + i;\n    let stationName = snames[i];\n    context.global[varName] = stationName;\n    stationNames.push(stationName);\n}\n\nmsg.payload = stationNames;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 600,
        "wires": [
            [
                "a14f7b727686dd07",
                "3e12a1f6d93151b1"
            ]
        ]
    },
    {
        "id": "a14f7b727686dd07",
        "type": "debug",
        "z": "e4986bf4e8db6f4f",
        "name": "Station Names",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1060,
        "y": 520,
        "wires": []
    },
    {
        "id": "3e12a1f6d93151b1",
        "type": "debug",
        "z": "e4986bf4e8db6f4f",
        "name": "Original Message",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 660,
        "wires": []
    },
    {
        "id": "24d854cde4f0955d",
        "type": "change",
        "z": "e4986bf4e8db6f4f",
        "name": "msg.zone - pomar",
        "rules": [
            {
                "t": "set",
                "p": "zone",
                "pt": "msg",
                "to": "pomar",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 520,
        "wires": [
            [
                "6b8885b2fcf3efb5"
            ]
        ]
    },
    {
        "id": "2fd4a6e8e915dc20",
        "type": "change",
        "z": "e4986bf4e8db6f4f",
        "name": "msg.zone - estufinha",
        "rules": [
            {
                "t": "set",
                "p": "zone",
                "pt": "msg",
                "to": "estufinha",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 680,
        "wires": [
            [
                "6b8885b2fcf3efb5"
            ]
        ]
    },
    {
        "id": "826bdabff1fd8fe5",
        "type": "change",
        "z": "e4986bf4e8db6f4f",
        "name": "msg.zone - pomar",
        "rules": [
            {
                "t": "set",
                "p": "zone",
                "pt": "msg",
                "to": "pomar",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 350,
        "y": 400,
        "wires": [
            [
                "2ec3b4e11c71d1dd"
            ]
        ]
    },
    {
        "id": "048419d1290f8af8",
        "type": "change",
        "z": "e4986bf4e8db6f4f",
        "name": "msg.zone - estufinha",
        "rules": [
            {
                "t": "set",
                "p": "zone",
                "pt": "msg",
                "to": "estufinha",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 360,
        "y": 300,
        "wires": [
            [
                "2ec3b4e11c71d1dd"
            ]
        ]
    },
    {
        "id": "f807f2578cc2c979",
        "type": "link in",
        "z": "e4986bf4e8db6f4f",
        "name": "Get States",
        "links": [
            "911787148623a2be",
            "a5ca368e191c489f"
        ],
        "x": 145,
        "y": 880,
        "wires": [
            [
                "719fc0506d03c046",
                "9938d0d1fe178fe1"
            ]
        ]
    },
    {
        "id": "719fc0506d03c046",
        "type": "http request",
        "z": "e4986bf4e8db6f4f",
        "name": "States OpenSprinkler Estufinha",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.8.131:8083/js?pw=e4a89868b069802aa0cf67419f7dad38",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 360,
        "y": 960,
        "wires": [
            [
                "e5330c0a2e67e90b"
            ]
        ]
    },
    {
        "id": "9938d0d1fe178fe1",
        "type": "http request",
        "z": "e4986bf4e8db6f4f",
        "name": "States OpenSprinkler Pomar",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.8.184:8080/js?pw=e4a89868b069802aa0cf67419f7dad38",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 350,
        "y": 820,
        "wires": [
            [
                "18e6b34e223bd2ae"
            ]
        ]
    },
    {
        "id": "d5147e7c2f9c4790",
        "type": "function",
        "z": "e4986bf4e8db6f4f",
        "name": "Extract Station States",
        "func": "let snstates = msg.payload.sn;\n\nlet stationStates = [];\n\nfor (let i = 0; i < snstates.length; i++) {\n    let varName = msg.location+\"_state_\" + i;\n    let stationState = snstates[i];\n    context.global[varName] = stationStates;\n    stationStates.push(stationState);\n}\n\nmsg.payload = stationStates;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 880,
        "wires": [
            [
                "1e5f51382b3b82eb",
                "1925ed4c48f17a23"
            ]
        ]
    },
    {
        "id": "1e5f51382b3b82eb",
        "type": "debug",
        "z": "e4986bf4e8db6f4f",
        "name": "Station States",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 820,
        "wires": []
    },
    {
        "id": "1925ed4c48f17a23",
        "type": "debug",
        "z": "e4986bf4e8db6f4f",
        "name": "Original Message",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 960,
        "wires": []
    },
    {
        "id": "e5330c0a2e67e90b",
        "type": "change",
        "z": "e4986bf4e8db6f4f",
        "name": "msg.location - estufinha",
        "rules": [
            {
                "t": "set",
                "p": "location",
                "pt": "msg",
                "to": "estufinha",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 680,
        "y": 960,
        "wires": [
            [
                "d5147e7c2f9c4790"
            ]
        ]
    },
    {
        "id": "18e6b34e223bd2ae",
        "type": "change",
        "z": "e4986bf4e8db6f4f",
        "name": "msg.location - pomar",
        "rules": [
            {
                "t": "set",
                "p": "location",
                "pt": "msg",
                "to": "pomar",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 670,
        "y": 820,
        "wires": [
            [
                "d5147e7c2f9c4790"
            ]
        ]
    },
    {
        "id": "9a2f8ea6656814da",
        "type": "inject",
        "z": "e4986bf4e8db6f4f",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 300,
        "y": 900,
        "wires": [
            [
                "719fc0506d03c046",
                "9938d0d1fe178fe1"
            ]
        ]
    },
    {
        "id": "adcc4d0cf7f8abf2",
        "type": "inject",
        "z": "1c65a5681f749b4b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 580,
        "wires": [
            [
                "8996a6d56602333e"
            ]
        ]
    },
    {
        "id": "8996a6d56602333e",
        "type": "mongodb4",
        "z": "1c65a5681f749b4b",
        "clientNode": "9362c1adaa612ce4",
        "mode": "db",
        "collection": "",
        "operation": "stats",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "Check global db stats",
        "x": 680,
        "y": 580,
        "wires": [
            [
                "306588a878ef000b"
            ]
        ]
    },
    {
        "id": "a90e31bf1ac10d3c",
        "type": "inject",
        "z": "1c65a5681f749b4b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 300,
        "y": 680,
        "wires": [
            [
                "dc02ea872af45e8c"
            ]
        ]
    },
    {
        "id": "dc02ea872af45e8c",
        "type": "function",
        "z": "1c65a5681f749b4b",
        "name": "set payload",
        "func": "msg.payload = [{name: 'marina', age: 22}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 680,
        "wires": [
            [
                "e5ee99ac2fc97a94"
            ]
        ]
    },
    {
        "id": "e5ee99ac2fc97a94",
        "type": "mongodb4",
        "z": "1c65a5681f749b4b",
        "clientNode": "9362c1adaa612ce4",
        "mode": "collection",
        "collection": "persons",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "",
        "x": 640,
        "y": 680,
        "wires": [
            [
                "306588a878ef000b"
            ]
        ]
    },
    {
        "id": "cc5c06441f72552f",
        "type": "inject",
        "z": "1c65a5681f749b4b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 300,
        "y": 780,
        "wires": [
            [
                "b7c5b84c0b733252"
            ]
        ]
    },
    {
        "id": "b7c5b84c0b733252",
        "type": "function",
        "z": "1c65a5681f749b4b",
        "name": "set payload",
        "func": "//msg.payload = [{age: 22}];\nmsg.payload = [{}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 780,
        "wires": [
            [
                "1e98c88db128225a"
            ]
        ]
    },
    {
        "id": "1e98c88db128225a",
        "type": "mongodb4",
        "z": "1c65a5681f749b4b",
        "clientNode": "9362c1adaa612ce4",
        "mode": "collection",
        "collection": "this",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "find.toArray",
        "x": 650,
        "y": 780,
        "wires": [
            [
                "306588a878ef000b"
            ]
        ]
    },
    {
        "id": "c9c1714b38833fd6",
        "type": "inject",
        "z": "1c65a5681f749b4b",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 300,
        "y": 880,
        "wires": [
            [
                "6fc7c156e3a3ced0"
            ]
        ]
    },
    {
        "id": "ec7f650afc965342",
        "type": "mongodb4",
        "z": "1c65a5681f749b4b",
        "clientNode": "9362c1adaa612ce4",
        "mode": "db",
        "collection": "",
        "operation": "dropDatabase",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "",
        "x": 820,
        "y": 880,
        "wires": [
            [
                "306588a878ef000b"
            ]
        ]
    },
    {
        "id": "6fc7c156e3a3ced0",
        "type": "function",
        "z": "1c65a5681f749b4b",
        "name": "Drop mongodb databse",
        "func": "msg.payload = {\n    action: 'dropDatabase'\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 530,
        "y": 880,
        "wires": [
            [
                "ec7f650afc965342"
            ]
        ]
    },
    {
        "id": "306588a878ef000b",
        "type": "debug",
        "z": "1c65a5681f749b4b",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 720,
        "wires": []
    },
    {
        "id": "8ee666fb6b0e3b59",
        "type": "inject",
        "z": "3147ab54d30d11bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "0",
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 80,
        "wires": [
            [
                "3e4d84b1b91d4999"
            ]
        ]
    },
    {
        "id": "3e4d84b1b91d4999",
        "type": "function",
        "z": "3147ab54d30d11bb",
        "name": "set payload",
        "func": "msg.payload = [{name: 'marina', age: 22}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 80,
        "wires": [
            [
                "32e9e09ded597a0a"
            ]
        ]
    },
    {
        "id": "32e9e09ded597a0a",
        "type": "mongodb4",
        "z": "3147ab54d30d11bb",
        "clientNode": "bcf62987d490788a",
        "mode": "collection",
        "collection": "persons",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "",
        "x": 480,
        "y": 80,
        "wires": [
            [
                "7a3d8fcbc73e33dc"
            ]
        ]
    },
    {
        "id": "7a3d8fcbc73e33dc",
        "type": "debug",
        "z": "3147ab54d30d11bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 80,
        "wires": []
    },
    {
        "id": "9f1ef279ba90ee33",
        "type": "inject",
        "z": "3147ab54d30d11bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "5dc5c04afa3435f4"
            ]
        ]
    },
    {
        "id": "5dc5c04afa3435f4",
        "type": "function",
        "z": "3147ab54d30d11bb",
        "name": "set payload",
        "func": "msg.payload = [[\n    {name: 'chris', age: 22},\n    {name: 'markus', age: 22}\n]];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 140,
        "wires": [
            [
                "50ba785b21334dd4"
            ]
        ]
    },
    {
        "id": "50ba785b21334dd4",
        "type": "mongodb4",
        "z": "3147ab54d30d11bb",
        "clientNode": "bcf62987d490788a",
        "mode": "collection",
        "collection": "persons",
        "operation": "insertMany",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "",
        "x": 490,
        "y": 140,
        "wires": [
            [
                "4f70045619556ef2"
            ]
        ]
    },
    {
        "id": "4f70045619556ef2",
        "type": "debug",
        "z": "3147ab54d30d11bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 140,
        "wires": []
    },
    {
        "id": "304bbe9953ac3819",
        "type": "inject",
        "z": "3147ab54d30d11bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "74036a120afc67e5"
            ]
        ]
    },
    {
        "id": "74036a120afc67e5",
        "type": "function",
        "z": "3147ab54d30d11bb",
        "name": "set payload",
        "func": "msg.payload = [{name: 'marina'}, {fields: {name: 1, age: 1}}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 260,
        "wires": [
            [
                "9ab9fc23318ca045"
            ]
        ]
    },
    {
        "id": "9ab9fc23318ca045",
        "type": "mongodb4",
        "z": "3147ab54d30d11bb",
        "clientNode": "bcf62987d490788a",
        "mode": "collection",
        "collection": "persons",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "",
        "x": 480,
        "y": 260,
        "wires": [
            [
                "39b3c9d8f81699aa"
            ]
        ]
    },
    {
        "id": "39b3c9d8f81699aa",
        "type": "debug",
        "z": "3147ab54d30d11bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 260,
        "wires": []
    },
    {
        "id": "889ba64ed746e103",
        "type": "inject",
        "z": "3147ab54d30d11bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 320,
        "wires": [
            [
                "d1e3b24513b5c335"
            ]
        ]
    },
    {
        "id": "d1e3b24513b5c335",
        "type": "function",
        "z": "3147ab54d30d11bb",
        "name": "set payload",
        "func": "//msg.payload = [{age: 22}];\nmsg.payload = [{}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 320,
        "wires": [
            [
                "1ffef73321ca27bf"
            ]
        ]
    },
    {
        "id": "1ffef73321ca27bf",
        "type": "mongodb4",
        "z": "3147ab54d30d11bb",
        "clientNode": "58099b05a48c465b",
        "mode": "collection",
        "collection": "sesamo",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "find.toArray",
        "x": 490,
        "y": 320,
        "wires": [
            [
                "cfdd9ef33019cb9b"
            ]
        ]
    },
    {
        "id": "cfdd9ef33019cb9b",
        "type": "debug",
        "z": "3147ab54d30d11bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 320,
        "wires": []
    },
    {
        "id": "74cf75193b229497",
        "type": "inject",
        "z": "3147ab54d30d11bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 380,
        "wires": [
            [
                "87fdb0c2eec7622f"
            ]
        ]
    },
    {
        "id": "87fdb0c2eec7622f",
        "type": "function",
        "z": "3147ab54d30d11bb",
        "name": "set payload",
        "func": "msg.payload = [{age: 22}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 380,
        "wires": [
            [
                "bc43d4566273d222"
            ]
        ]
    },
    {
        "id": "bc43d4566273d222",
        "type": "mongodb4",
        "z": "3147ab54d30d11bb",
        "clientNode": "bcf62987d490788a",
        "mode": "collection",
        "collection": "persons",
        "operation": "find",
        "output": "forEach",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "find.forEach",
        "x": 490,
        "y": 380,
        "wires": [
            [
                "33d1243c9ccfbe52"
            ]
        ]
    },
    {
        "id": "33d1243c9ccfbe52",
        "type": "debug",
        "z": "3147ab54d30d11bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 380,
        "wires": []
    },
    {
        "id": "f1a8bcd90c5ece5d",
        "type": "inject",
        "z": "3147ab54d30d11bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 440,
        "wires": [
            [
                "34cf5363e8ea21db"
            ]
        ]
    },
    {
        "id": "34cf5363e8ea21db",
        "type": "function",
        "z": "3147ab54d30d11bb",
        "name": "set payload",
        "func": "msg.payload = [{age: 22}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 440,
        "wires": [
            [
                "aa816e627b33462f"
            ]
        ]
    },
    {
        "id": "aa816e627b33462f",
        "type": "mongodb4",
        "z": "3147ab54d30d11bb",
        "clientNode": "bcf62987d490788a",
        "mode": "collection",
        "collection": "persons",
        "operation": "countDocuments",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "countDocuments",
        "x": 510,
        "y": 440,
        "wires": [
            [
                "2e22ba9314d97df4"
            ]
        ]
    },
    {
        "id": "2e22ba9314d97df4",
        "type": "debug",
        "z": "3147ab54d30d11bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 440,
        "wires": []
    },
    {
        "id": "8ec44acf102ab7a5",
        "type": "inject",
        "z": "3147ab54d30d11bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 200,
        "wires": [
            [
                "3d756316a08233a8"
            ]
        ]
    },
    {
        "id": "3d756316a08233a8",
        "type": "function",
        "z": "3147ab54d30d11bb",
        "name": "set payload",
        "func": "msg.payload = [{}, {$inc: {age: 1}, $set: {aged: true}}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 200,
        "wires": [
            [
                "911eddf6a24f0156"
            ]
        ]
    },
    {
        "id": "911eddf6a24f0156",
        "type": "mongodb4",
        "z": "3147ab54d30d11bb",
        "clientNode": "bcf62987d490788a",
        "mode": "collection",
        "collection": "persons",
        "operation": "updateMany",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "d6f94cf728aa5c32"
            ]
        ]
    },
    {
        "id": "d6f94cf728aa5c32",
        "type": "debug",
        "z": "3147ab54d30d11bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 200,
        "wires": []
    },
    {
        "id": "11da555d54b2aab8",
        "type": "inject",
        "z": "3147ab54d30d11bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "2eb159796c018da5"
            ]
        ]
    },
    {
        "id": "2eb159796c018da5",
        "type": "function",
        "z": "3147ab54d30d11bb",
        "name": "with doc _id",
        "func": "// query a document id with string, \n// the operation node will handle this\nmsg.payload = [{_id: \"6333409294471deda67da815\"}];\n\n// operation node will substitute, if valid id string\n// msg.payload = [{_id: ObjectId(\"6333409294471deda67da815\")}]\n\n// THIS EXAMPLE WILL ONLY WORK IF YOU HAVE A DOCUMENT WITH THIS ID IN YOUR DATA SET :-)\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 500,
        "wires": [
            [
                "ed96a6ae0e0f1a3c"
            ]
        ]
    },
    {
        "id": "ed96a6ae0e0f1a3c",
        "type": "mongodb4",
        "z": "3147ab54d30d11bb",
        "clientNode": "bcf62987d490788a",
        "mode": "collection",
        "collection": "persons",
        "operation": "findOne",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": true,
        "name": "findOne",
        "x": 480,
        "y": 500,
        "wires": [
            [
                "3b79f36ba1211593"
            ]
        ]
    },
    {
        "id": "3b79f36ba1211593",
        "type": "debug",
        "z": "3147ab54d30d11bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 500,
        "wires": []
    },
    {
        "id": "8830ec26ba4c458e",
        "type": "inject",
        "z": "3147ab54d30d11bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 560,
        "wires": [
            [
                "17eb32fcfeff3d51"
            ]
        ]
    },
    {
        "id": "17eb32fcfeff3d51",
        "type": "function",
        "z": "3147ab54d30d11bb",
        "name": "set payload",
        "func": "msg.payload = [{age: {$gt: 25}}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 560,
        "wires": [
            [
                "b699e978ebc717dc"
            ]
        ]
    },
    {
        "id": "b699e978ebc717dc",
        "type": "mongodb4",
        "z": "3147ab54d30d11bb",
        "clientNode": "bcf62987d490788a",
        "mode": "collection",
        "collection": "persons",
        "operation": "deleteMany",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "",
        "x": 490,
        "y": 560,
        "wires": [
            [
                "2d8bb2778e6c61c4"
            ]
        ]
    },
    {
        "id": "2d8bb2778e6c61c4",
        "type": "debug",
        "z": "3147ab54d30d11bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 560,
        "wires": []
    },
    {
        "id": "b846b486f919db25",
        "type": "inject",
        "z": "3147ab54d30d11bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 680,
        "wires": [
            [
                "c17e6c30b0ac693c"
            ]
        ]
    },
    {
        "id": "c17e6c30b0ac693c",
        "type": "mongodb4",
        "z": "3147ab54d30d11bb",
        "clientNode": "bcf62987d490788a",
        "mode": "db",
        "collection": "",
        "operation": "stats",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "db stats",
        "x": 480,
        "y": 680,
        "wires": [
            [
                "53d3c8859dd5fd51"
            ]
        ]
    },
    {
        "id": "53d3c8859dd5fd51",
        "type": "debug",
        "z": "3147ab54d30d11bb",
        "name": "payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 700,
        "y": 680,
        "wires": []
    },
    {
        "id": "d5a01790676479c3",
        "type": "inject",
        "z": "3147ab54d30d11bb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 620,
        "wires": [
            [
                "594dceb7d5012ef6"
            ]
        ]
    },
    {
        "id": "594dceb7d5012ef6",
        "type": "function",
        "z": "3147ab54d30d11bb",
        "name": "distinct age",
        "func": "msg.payload = [\"age\"];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 620,
        "wires": [
            [
                "2c60ce2538743838"
            ]
        ]
    },
    {
        "id": "2c60ce2538743838",
        "type": "mongodb4",
        "z": "3147ab54d30d11bb",
        "clientNode": "bcf62987d490788a",
        "mode": "collection",
        "collection": "persons",
        "operation": "distinct",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "c47f435d6f6aa3e8"
            ]
        ]
    },
    {
        "id": "c47f435d6f6aa3e8",
        "type": "debug",
        "z": "3147ab54d30d11bb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 620,
        "wires": []
    },
    {
        "id": "fa5063a7ce043369",
        "type": "rocketchat-out",
        "z": "f7f9c56481cb8ead",
        "name": "Send msg.payload.send",
        "server": "22dba644aa7aea67",
        "destination": "rooms",
        "room": "payload.rid",
        "roomType": "msg",
        "avatarText": "",
        "avatarTextType": "str",
        "aliasText": "",
        "aliasTextType": "str",
        "emojiText": "",
        "emojiTextType": "str",
        "messageText": "payload.send",
        "messageTextType": "msg",
        "attachments": "[]",
        "attachmentsType": "json",
        "x": 1290,
        "y": 320,
        "wires": []
    },
    {
        "id": "6fd048c66f308817",
        "type": "function",
        "z": "f7f9c56481cb8ead",
        "name": "function 3",
        "func": "var regex = /^!rega\\s*(\\S+)?$/;\nvar match = msg.payload.msg.match(regex);\n\nif (match[1]) {\n    var zone = match[1];\n    var keys = Object.keys(context.global);\n    var locationKeys = keys.filter(function (key) {\n        return key.startsWith(zone+\"_name_\");\n    });\n\n    var result = locationKeys.map(function (key) {\n        var id = key.split(\"_\")[2];\n        var name = context.global[key];\n        var state = context.global[zone + \"_state_\" + id];\n        state = state.map(function (val) {\n            return parseInt(val);\n        });\n        return id +\": \"+name + \" - \" + state[id];\n    }).join(\"\\n\");\n\n    msg.payload.send = \"Localização: \" + zone + \"\\nEstações Disponiveis:\\n\" + result + \"\\nUtilizar !rega \"+zone+\" (estação) on/off\";\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 260,
        "wires": [
            [
                "fa5063a7ce043369"
            ]
        ]
    },
    {
        "id": "522cbd1b77982942",
        "type": "switch",
        "z": "f7f9c56481cb8ead",
        "name": "!rega",
        "property": "payload.msg",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "!rega",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 320,
        "wires": [
            [
                "c36abec0b81a2728",
                "12bf2ccdb48aaa50",
                "637607be23fda4fd",
                "d4d8746e2092fe3e",
                "706686c9e6142870"
            ]
        ]
    },
    {
        "id": "30e5eafd7b703ca0",
        "type": "comment",
        "z": "f7f9c56481cb8ead",
        "name": "",
        "info": "!rega - usage manual\n!rega localizaçoes - manda as localizaçoes disponiveis\n!rega pomar - mosta as estaçoes do pomar e estado.\n!rega pomar 1 on/off - liga/desliga a estaçao 1 do pomar\n",
        "x": 300,
        "y": 380,
        "wires": []
    },
    {
        "id": "c36abec0b81a2728",
        "type": "switch",
        "z": "f7f9c56481cb8ead",
        "name": "!rega (zona)",
        "property": "payload.msg",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^!rega\\s*(?!(lista\\b|\\b$))(\\S+)$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 260,
        "wires": [
            [
                "a5ca368e191c489f",
                "c8add4a9ca4b3af7"
            ]
        ]
    },
    {
        "id": "637607be23fda4fd",
        "type": "switch",
        "z": "f7f9c56481cb8ead",
        "name": "!rega lista",
        "property": "payload.msg",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "!rega lista",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 520,
        "y": 320,
        "wires": [
            [
                "8236fada222962ba"
            ]
        ]
    },
    {
        "id": "12bf2ccdb48aaa50",
        "type": "switch",
        "z": "f7f9c56481cb8ead",
        "name": "!rega",
        "property": "payload.msg",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "!rega",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 380,
        "wires": [
            [
                "eceeb630336b1dc9"
            ]
        ]
    },
    {
        "id": "a5ca368e191c489f",
        "type": "link out",
        "z": "f7f9c56481cb8ead",
        "name": "link out 1",
        "mode": "link",
        "links": [
            "f807f2578cc2c979"
        ],
        "x": 685,
        "y": 220,
        "wires": []
    },
    {
        "id": "c8add4a9ca4b3af7",
        "type": "delay",
        "z": "f7f9c56481cb8ead",
        "name": "Delay for http request",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 740,
        "y": 260,
        "wires": [
            [
                "6fd048c66f308817"
            ]
        ]
    },
    {
        "id": "8236fada222962ba",
        "type": "template",
        "z": "f7f9c56481cb8ead",
        "name": "",
        "field": "payload.send",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Zonas disponiveis:\n- estufinha\n- pomar\nUsar: !rega ZONA para consultar os estados das mesmas.",
        "output": "str",
        "x": 740,
        "y": 320,
        "wires": [
            [
                "fa5063a7ce043369"
            ]
        ]
    },
    {
        "id": "d4d8746e2092fe3e",
        "type": "switch",
        "z": "f7f9c56481cb8ead",
        "name": "!rega (zona) (estação) off",
        "property": "payload.msg",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^!rega\\s+(\\S+)\\s+(\\d+)\\s+(off)$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 180,
        "wires": [
            [
                "4822a90086b45c81"
            ]
        ]
    },
    {
        "id": "4822a90086b45c81",
        "type": "function",
        "z": "f7f9c56481cb8ead",
        "name": "function 4",
        "func": "var regex = /^!rega\\s+(\\S+)\\s+(\\d+)\\s+(on|off)$/;\n//var regex = /^!rega\\s+(\\S+)\\s+(\\d+)\\s+(on|off)(?:\\s+(\\d+))?$/;\nvar match = msg.payload.msg.match(regex);\n\nif (match[1]) {\n    var zone = match[1];\n    var estacao = match[2];\n    var estado = match[3];\n    if (zone == \"estufinha\") {\n        msg.httpip = \"192.168.8.131\"\n        msg.httpport = \"8083\"\n    }\n    if (zone == \"pomar\") {\n        msg.httpip = \"192.168.8.184\"\n        msg.httpport = \"8080\"\n    }\n    // Update the output message to include the \"zone: estação: on/off\" format\n    if (estado == \"on\") {\n        msg.payload.send = \"A ligar:\\nZona:\" + zone +\"\\nEstação: \"+ estacao;\n        //http://os-ip/cm?pw=xxx&sid=0&en=1&t=360 \n        // sid: Station index(starting from 0)\n        // en: Enable bit(1: open the selected station; 0: close the selected station).\n        // t: Timer(in seconds).Acceptable range is 0 to 64800(18 hours).T\n    }\n    if (estado == \"off\") {\n        msg.payload.send = \"A desligar:\\nZona: \" + zone + \"\\nEstação: \" + estacao;\n        msg.payload.zone = zone\n        msg.estacaoid = estacao\n        //http://os-ip/cm?pw=xxx&sid=3&en=0\n    }\n\n\n}\n\n//estufinha 192.168.8.131:8083/\n//pomar 192.168.8.184:8080/\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 180,
        "wires": [
            [
                "fa5063a7ce043369",
                "957fa9d1eef591a6"
            ]
        ]
    },
    {
        "id": "957fa9d1eef591a6",
        "type": "http request",
        "z": "f7f9c56481cb8ead",
        "name": "!rega (zona) (estacao) off",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://{{httpip}}:{{httpport}}/cm?pw=e4a89868b069802aa0cf67419f7dad38&sid={{estacaoid}}&en=0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1050,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "eceeb630336b1dc9",
        "type": "template",
        "z": "f7f9c56481cb8ead",
        "name": "",
        "field": "payload.send",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "!rega lista --> Consultar as zonas disponiveis.\n!rega (ZONA) --> Consultar os estados das estações de determinada zona.\n--- Ligar/Desligar Estação ---\n!rega (ZONA) (ESTAÇÃO) on (SEGUNDOS) --> Ligar determinada estação por X segundos.\n!rega (ZONA) (ESTAÇÃO) off --> Ligar determinada estação.",
        "output": "str",
        "x": 740,
        "y": 380,
        "wires": [
            [
                "fa5063a7ce043369"
            ]
        ]
    },
    {
        "id": "706686c9e6142870",
        "type": "switch",
        "z": "f7f9c56481cb8ead",
        "name": "!rega (zona) (estação) on (time)",
        "property": "payload.msg",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^!rega\\s+(\\S+)\\s+(\\d+)\\s+(on)\\s+(\\d+)$",
                "vt": "str",
                "case": false
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 590,
        "y": 120,
        "wires": [
            [
                "08ffdbe76537eca4"
            ]
        ]
    },
    {
        "id": "08ffdbe76537eca4",
        "type": "function",
        "z": "f7f9c56481cb8ead",
        "name": "function 5",
        "func": "var regex = /^!rega\\s+(\\S+)\\s+(\\d+)\\s+(on)\\s+(\\d+)$/;\nvar match = msg.payload.msg.match(regex);\n\nif (match[1]) {\n    var zone = match[1];\n    var estacao = match[2];\n    var estado = match[3];\n    var time = match[4];\n    if (zone == \"estufinha\") {\n        msg.httpip = \"192.168.8.131\"\n        msg.httpport = \"8083\"\n    }\n    if (zone == \"pomar\") {\n        msg.httpip = \"192.168.8.184\"\n        msg.httpport = \"8080\"\n    }\n    // Update the output message to include the \"zona: estação: on/off\" format\n    if (estado == \"on\") {\n        msg.payload.send = \"A ligar:\\nZona: \" + zone +\"\\nEstação: \"+ estacao+\"\\nDuração: \"+ time+\" segundos\";\n        msg.payload.zone = zone\n        msg.estacaoid = estacao\n        msg.timeon = time\n        //http://os-ip/cm?pw=xxx&sid=0&en=1&t=360 \n        // sid: Station index(starting from 0)\n        // en: Enable bit(1: open the selected station; 0: close the selected station).\n        // t: Timer(in seconds).Acceptable range is 0 to 64800(18 hours).T\n    }\n    if (estado == \"off\") {\n        msg.payload.send = \"A desligar:\\nZona: \" + zone + \"\\nEstação: \" + estacao;\n        msg.payload.zone = zone\n        msg.estacaoid = estacao\n        //http://os-ip/cm?pw=xxx&sid=3&en=0\n    }\n\n\n}\n\n//estufinha 192.168.8.131:8083/\n//pomar 192.168.8.184:8080/\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 120,
        "wires": [
            [
                "fa5063a7ce043369",
                "f9dd0c52cac49b2e"
            ]
        ]
    },
    {
        "id": "f9dd0c52cac49b2e",
        "type": "http request",
        "z": "f7f9c56481cb8ead",
        "name": "!rega (zona) (estacao) on (time)",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://{{httpip}}:{{httpport}}/cm?pw=e4a89868b069802aa0cf67419f7dad38&sid={{estacaoid}}&en=1&t={{timeon}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 1070,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "787ee8890943728d",
        "type": "debug",
        "z": "f7f9c56481cb8ead",
        "name": "Rocket Chat msg recieved",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 120,
        "y": 180,
        "wires": []
    },
    {
        "id": "7c604a337f4aada9",
        "type": "rocketchat-in",
        "z": "f7f9c56481cb8ead",
        "name": "We receive a msg",
        "server": "22dba644aa7aea67",
        "origin": "user",
        "room": "general",
        "roomType": "str",
        "roomData": "{}",
        "x": 90,
        "y": 240,
        "wires": [
            [
                "522cbd1b77982942",
                "787ee8890943728d",
                "ed4da8c65c82178c",
                "67d7430640061a69"
            ]
        ]
    },
    {
        "id": "ed4da8c65c82178c",
        "type": "switch",
        "z": "f7f9c56481cb8ead",
        "name": "!sesamo",
        "property": "payload.msg",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "!sesamo",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "!sesamo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 540,
        "wires": [
            [
                "8adc1ecbfd468ed1"
            ],
            []
        ]
    },
    {
        "id": "8adc1ecbfd468ed1",
        "type": "function",
        "z": "f7f9c56481cb8ead",
        "name": "Gate Mode",
        "func": "var regex = /^!sesamo\\s*(\\S+)?$/;\nvar match = msg.payload.msg.match(regex);\nvar rocketJson\nif (match[1]) {\n    var mode = match[1];\n    msg.payload.send = \"A abrir o portão com o modo: \"+ mode;\n}\nmsg.payload.api = { \"mode\": mode, \"user\": msg.payload.u.username };\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 540,
        "wires": [
            [
                "a6766bf6465f7df2",
                "fa5063a7ce043369"
            ]
        ]
    },
    {
        "id": "a6766bf6465f7df2",
        "type": "link out",
        "z": "f7f9c56481cb8ead",
        "name": "/sessamo",
        "mode": "link",
        "links": [
            "89dc6ce1ba3a9ed0"
        ],
        "x": 605,
        "y": 480,
        "wires": []
    },
    {
        "id": "67d7430640061a69",
        "type": "switch",
        "z": "f7f9c56481cb8ead",
        "name": "!sesamo",
        "property": "payload.msg",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "!sesamo",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 320,
        "y": 620,
        "wires": [
            [
                "cd4cfea2f4dc6bab"
            ]
        ]
    },
    {
        "id": "cd4cfea2f4dc6bab",
        "type": "template",
        "z": "f7f9c56481cb8ead",
        "name": "",
        "field": "payload.send",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Modos Disponiveis:\n- walk\nA abrir por: 2.5\nAberto por: 6\n- walk_fast\nA abrir por: 2.5\nAberto por: 3\n- bycar\nA abrir por: 22\nAberto por: 18\n- whellbarrow\nA abrir por: 5\nAberto por: 9",
        "output": "str",
        "x": 480,
        "y": 620,
        "wires": [
            [
                "fa5063a7ce043369"
            ]
        ]
    },
    {
        "id": "db2de8bd2af5b0c6",
        "type": "http in",
        "z": "33d8cc1cde209e15",
        "name": "Post rega-control",
        "url": "/rega-control",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 160,
        "wires": [
            [
                "6b65c78c755dc0f4"
            ]
        ]
    },
    {
        "id": "6b65c78c755dc0f4",
        "type": "function",
        "z": "33d8cc1cde209e15",
        "name": "Json Parse",
        "func": "var json;\n\nif (typeof msg.payload === 'string') {\n    // Check if msg.payload is a string\n    try {\n        json = JSON.parse(msg.payload); // Try to parse the string as JSON\n    } catch (error) {\n        // If parsing fails, it's not a valid JSON\n        // You can handle the error here according to your requirements\n        // For example, you can set a flag, send an appropriate response,\n        // or log an error message\n        msg.error = error;\n        msg.statusCode = 418; // Set msg.statusCode to 418 (I'm a teapot) for error case\n        return msg; // Return the modified msg object\n    }\n} else {\n    json = msg.payload; // Assume msg.payload is already an object\n}\n\ntry {\n    // Check if the expected keys are present in the JSON object\n    if (!json.zone || !json.estacao || !json.action) {\n        // If any of the expected keys are missing, handle the error\n        // You can set an appropriate response in msg.payload and set an appropriate status code\n        // For example:\n        msg.payload = \"Missing required keys in JSON\";\n        msg.statusCode = 400; // Set msg.statusCode to 400 (Bad Request) for error case\n        return msg; // Return the modified msg object\n    }\n\n    // Add current date to the JSON object\n    json.date = new Date().toISOString();\n\n    // Set json.time to null if json.action is \"off\" and json.time is non-existent\n    if (json.action === \"off\") {\n        json.time = null;\n    }\n    if (json.action !== \"off\" && !json.time) {\n        msg.payload = \"You are outatime\";\n        msg.statusCode = 400; // Set msg.statusCode to 400 (Bad Request) for error case\n        return msg; // Return the modified msg object\n    }\n    msg.payload = json; // Set msg.payload to the updated JSON object\n    msg.statusCode = 200; // Set msg.statusCode to 200 for success case\n} catch (error) {\n    msg.error = error;\n    msg.statusCode = 418; // Set msg.statusCode to 418 (I'm a teapot) for error case\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 160,
        "wires": [
            [
                "ba318565b18d2c25",
                "258eec7ad3e02e4e",
                "8c847cb94a75eeef"
            ]
        ]
    },
    {
        "id": "ba318565b18d2c25",
        "type": "http response",
        "z": "33d8cc1cde209e15",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 510,
        "y": 100,
        "wires": []
    },
    {
        "id": "11dd997271bd62c5",
        "type": "comment",
        "z": "33d8cc1cde209e15",
        "name": "",
        "info": "post com um json do estilo:\n{\"zona\":\"pomar\", \"estacao\":1, \"action\": \"off\", \"time\": null}\nadicionar tambem enviar o cookie do client para auth com a db",
        "x": 120,
        "y": 100,
        "wires": []
    },
    {
        "id": "103d3c1a03548194",
        "type": "function",
        "z": "33d8cc1cde209e15",
        "name": "function 6",
        "func": "if (msg.payload.zone == \"estufinha\") {\n    msg.httpip = \"192.168.8.131\"\n    msg.httpport = \"8083\"\n}\nif (msg.payload.zone == \"pomar\") {\n    msg.httpip = \"192.168.8.184\"\n    msg.httpport = \"8080\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 300,
        "wires": [
            [
                "89c081331d2c9844"
            ]
        ]
    },
    {
        "id": "89c081331d2c9844",
        "type": "http request",
        "z": "33d8cc1cde209e15",
        "name": "!rega (zona) (estacao) off",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://{{httpip}}:{{httpport}}/cm?pw=e4a89868b069802aa0cf67419f7dad38&sid={{payload.estacao}}&en=0",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 930,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "7e23416f20c1cf74",
        "type": "function",
        "z": "33d8cc1cde209e15",
        "name": "function 7",
        "func": "if (msg.payload.zone == \"estufinha\") {\n    msg.httpip = \"192.168.8.131\"\n    msg.httpport = \"8083\"\n}\nif (msg.payload.zone == \"pomar\") {\n    msg.httpip = \"192.168.8.184\"\n    msg.httpport = \"8080\"\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 240,
        "wires": [
            [
                "48f74b9e9fe4d731"
            ]
        ]
    },
    {
        "id": "48f74b9e9fe4d731",
        "type": "http request",
        "z": "33d8cc1cde209e15",
        "name": "!rega (zona) (estacao) on (time)",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://{{httpip}}:{{httpport}}/cm?pw=e4a89868b069802aa0cf67419f7dad38&sid={{payload.estacao}}&en=1&t={{payload.time}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 950,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "258eec7ad3e02e4e",
        "type": "switch",
        "z": "33d8cc1cde209e15",
        "name": "action: on",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 240,
        "wires": [
            [
                "7e23416f20c1cf74"
            ]
        ]
    },
    {
        "id": "8c847cb94a75eeef",
        "type": "switch",
        "z": "33d8cc1cde209e15",
        "name": "action: off",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 500,
        "y": 300,
        "wires": [
            [
                "103d3c1a03548194"
            ]
        ]
    },
    {
        "id": "49558cc0996ad8cd",
        "type": "http in",
        "z": "33d8cc1cde209e15",
        "name": "Post sensor-data",
        "url": "/sensor-data",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 500,
        "wires": [
            [
                "ecc477833abdb64e"
            ]
        ]
    },
    {
        "id": "ecc477833abdb64e",
        "type": "function",
        "z": "33d8cc1cde209e15",
        "name": "Json Parse",
        "func": "var json;\n\nif (typeof msg.payload === 'string') {\n    try {\n        json = JSON.parse(msg.payload);\n    } catch (error) {\n        msg.error = error;\n        msg.statusCode = 418;\n        return msg;\n    }\n} else {\n    json = msg.payload;\n}\n\ntry {\n    for (var key in json) {\n        if (json.hasOwnProperty(key)) {\n            msg.payload = msg.payload || {}; // Initialize msg.payload as an object if it's not already\n            msg.payload[key] = json[key]; // Save the value with the respective key in msg.payload\n        }\n    }\n\n    json.date = new Date().toISOString();\n    if (!json.collection) {\n        // If any of the expected keys are missing, handle the error\n        // You can set an appropriate response in msg.payload and set an appropriate status code\n        // For example:\n        msg.payload = \"Missing collection in JSON\";\n        msg.statusCode = 418; // Set msg.statusCode to 400 (Bad Request) for error case\n        return msg; // Return the modified msg object\n    }\n    msg.collection = json.collection;\n    delete json.collection;\n    msg.statusCode = 200; // Set msg.statusCode to 200 for success case\n} catch (error) {\n    msg.error = error;\n    msg.statusCode = 418; // Set msg.statusCode to 418 (I'm a teapot) for error case\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 500,
        "wires": [
            [
                "fc5ea472625c7966",
                "31fa86045ebd7926",
                "1f04e9a26096b044"
            ]
        ]
    },
    {
        "id": "31fa86045ebd7926",
        "type": "http response",
        "z": "33d8cc1cde209e15",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 570,
        "y": 420,
        "wires": []
    },
    {
        "id": "fc5ea472625c7966",
        "type": "mongodb4",
        "z": "33d8cc1cde209e15",
        "clientNode": "9362c1adaa612ce4",
        "mode": "collection",
        "collection": "",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "",
        "x": 640,
        "y": 500,
        "wires": [
            [
                "1f04e9a26096b044"
            ]
        ]
    },
    {
        "id": "1f04e9a26096b044",
        "type": "debug",
        "z": "33d8cc1cde209e15",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 500,
        "wires": []
    },
    {
        "id": "419d1425562520c9",
        "type": "comment",
        "z": "33d8cc1cde209e15",
        "name": "",
        "info": "The sensor needs to send the values in json indication the collection\n{\"ph\":7.4,\"value2\": 743,\"collection\":\"this\"}",
        "x": 140,
        "y": 440,
        "wires": []
    },
    {
        "id": "ad0f973fc6f8ea8d",
        "type": "http in",
        "z": "33d8cc1cde209e15",
        "name": "GET rega-state",
        "url": "/rega-state/:zone",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 820,
        "wires": [
            [
                "8ac7bac671eefb93"
            ]
        ]
    },
    {
        "id": "1ac5c9be290a7615",
        "type": "http response",
        "z": "33d8cc1cde209e15",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 720,
        "wires": []
    },
    {
        "id": "8d5a3dbd84c543ea",
        "type": "http request",
        "z": "33d8cc1cde209e15",
        "name": "States OpenSprinkler Estufinha",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.8.131:8083/js?pw=e4a89868b069802aa0cf67419f7dad38",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 630,
        "y": 900,
        "wires": [
            [
                "a9dee1de821ada2f"
            ]
        ]
    },
    {
        "id": "46eb70a706111a71",
        "type": "http request",
        "z": "33d8cc1cde209e15",
        "name": "States OpenSprinkler Pomar",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://192.168.8.184:8080/js?pw=e4a89868b069802aa0cf67419f7dad38",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 640,
        "y": 740,
        "wires": [
            [
                "a9dee1de821ada2f"
            ]
        ]
    },
    {
        "id": "a9dee1de821ada2f",
        "type": "function",
        "z": "33d8cc1cde209e15",
        "name": "return json",
        "func": "let snstates = msg.payload.sn;\n\nlet stationStates = [];\nfor (let i = 0; i < snstates.length; i++) {\n    let varName = msg.zone + \"_state_\" + i;\n    let stationState = snstates[i];\n    context.global[varName] = stationStates;\n    stationStates.push({ name: varName, state: stationState });\n}\nmsg.headers = {\n    \"Content-Type\": \"application/json\"\n};\n\nmsg.payload = JSON.stringify(stationStates);\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 850,
        "y": 800,
        "wires": [
            [
                "63a13c740da2b2c3",
                "1ac5c9be290a7615"
            ]
        ]
    },
    {
        "id": "2ba185f145bd88d3",
        "type": "switch",
        "z": "33d8cc1cde209e15",
        "name": "msg.zone = pomar",
        "property": "zone",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "pomar",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 740,
        "wires": [
            [
                "46eb70a706111a71"
            ]
        ]
    },
    {
        "id": "b0253c2f372a8479",
        "type": "switch",
        "z": "33d8cc1cde209e15",
        "name": "msg.zone = estufinha",
        "property": "zone",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "estufinha",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 280,
        "y": 900,
        "wires": [
            [
                "8d5a3dbd84c543ea"
            ]
        ]
    },
    {
        "id": "63a13c740da2b2c3",
        "type": "debug",
        "z": "33d8cc1cde209e15",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 800,
        "wires": []
    },
    {
        "id": "8ac7bac671eefb93",
        "type": "function",
        "z": "33d8cc1cde209e15",
        "name": "",
        "func": "let zone = msg.req.params.zone;\nmsg.zone = zone;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 820,
        "wires": [
            [
                "2ba185f145bd88d3",
                "b0253c2f372a8479"
            ]
        ]
    },
    {
        "id": "85f18b1f9f9b0885",
        "type": "http in",
        "z": "33d8cc1cde209e15",
        "name": "POST /sesamo",
        "url": "/sesamo",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 80,
        "y": 1060,
        "wires": [
            [
                "5332e61b1b50872c"
            ]
        ]
    },
    {
        "id": "8dad0c8133cfa364",
        "type": "http response",
        "z": "33d8cc1cde209e15",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 410,
        "y": 980,
        "wires": []
    },
    {
        "id": "5332e61b1b50872c",
        "type": "function",
        "z": "33d8cc1cde209e15",
        "name": "",
        "func": "var json;\nif (msg.payload.api){\n    msg.payload = msg.payload.api;\n}\nif (typeof msg.payload === 'string') {\n    try {\n        json = JSON.parse(msg.payload);\n    } catch (error) {\n        msg.error = error;\n        msg.statusCode = 418;\n        return msg;\n    }\n} else {\n    json = msg.payload;\n}\n\ntry {\n    for (var key in json) {\n        if (json.hasOwnProperty(key)) {\n            msg.payload = msg.payload || {}; // Initialize msg.payload as an object if it's not already\n            msg.payload[key] = json[key]; // Save the value with the respective key in msg.payload\n        }\n    }\n\n    json.date = new Date().toISOString();\n    if (!(json.mode) || !(json.user)) {\n        // If any of the expected keys are missing, handle the error\n        // You can set an appropriate response in msg.payload and set an appropriate status code\n        // For example:\n        msg.payload = \"You need to specify the mode and the user\";\n        msg.statusCode = 418; // Set msg.statusCode to 400 (Bad Request) for error case\n        return msg; // Return the modified msg object\n    }\n    if (json.mode === 'walk'){\n        msg.t1 = 2.5; // time motor running\n        msg.t2 = 6; // time until closing\n    } else if (json.mode === 'walk_fast'){\n        msg.t1 = 2.5; // time motor running\n        msg.t2 = 3; // time until closing\n    } else if (json.mode === 'bycar') {\n        msg.t1 = 22; // time motor running\n        msg.t2 = 18; // time until closing\n    } else if (json.mode === 'whellbarrow') {\n        msg.t1 = 5; // time motor running\n        msg.t2 = 9; // time until closing\n    }\n    msg.collection = \"sesamo\";\n    delete json.collection;\n    msg.statusCode = 200; // Set msg.statusCode to 200 for success case\n} catch (error) {\n    msg.error = error;\n    msg.statusCode = 418; // Set msg.statusCode to 418 (I'm a teapot) for error case\n}\nmsg.sendssh = \"ssh raspportao 'python3 /home/pi/sesamo.py \" + msg.t1 + \" \" + msg.t2+\"'\";\n//msg.sendssh = \"ssh raspportao 'echo aa > /home/pi/this'\";\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 1060,
        "wires": [
            [
                "8dad0c8133cfa364",
                "5705fdc7027c13ce",
                "ac0f341500f81192"
            ]
        ]
    },
    {
        "id": "5705fdc7027c13ce",
        "type": "change",
        "z": "33d8cc1cde209e15",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "sendssh",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 1160,
        "wires": [
            [
                "e3f22e369ba78d7e"
            ]
        ]
    },
    {
        "id": "7838bc61dc7adbb9",
        "type": "debug",
        "z": "33d8cc1cde209e15",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 960,
        "y": 1000,
        "wires": []
    },
    {
        "id": "e3f22e369ba78d7e",
        "type": "ssh-v3",
        "z": "33d8cc1cde209e15",
        "name": "Debian",
        "conf": "d489d63adf6c1ab5",
        "debug": false,
        "x": 620,
        "y": 1120,
        "wires": [
            [
                "7838bc61dc7adbb9"
            ]
        ]
    },
    {
        "id": "89dc6ce1ba3a9ed0",
        "type": "link in",
        "z": "33d8cc1cde209e15",
        "name": "/sesamo",
        "links": [
            "a6766bf6465f7df2"
        ],
        "x": 175,
        "y": 980,
        "wires": [
            [
                "5332e61b1b50872c"
            ]
        ]
    },
    {
        "id": "ac0f341500f81192",
        "type": "mongodb4",
        "z": "33d8cc1cde209e15",
        "clientNode": "58099b05a48c465b",
        "mode": "collection",
        "collection": "",
        "operation": "insertOne",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "",
        "x": 560,
        "y": 1040,
        "wires": [
            [
                "7838bc61dc7adbb9"
            ]
        ]
    },
    {
        "id": "3c562ba907df13dc",
        "type": "http in",
        "z": "33d8cc1cde209e15",
        "name": "",
        "url": "/sesamo-log",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 1280,
        "wires": [
            [
                "e1d30bbac3a0e53b"
            ]
        ]
    },
    {
        "id": "79a3dce739fb254c",
        "type": "mongodb4",
        "z": "33d8cc1cde209e15",
        "clientNode": "58099b05a48c465b",
        "mode": "collection",
        "collection": "sesamo",
        "operation": "find",
        "output": "toArray",
        "maxTimeMS": "",
        "handleDocId": false,
        "name": "find.toArray",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "1ab1c78c0bc54305"
            ]
        ]
    },
    {
        "id": "e1d30bbac3a0e53b",
        "type": "function",
        "z": "33d8cc1cde209e15",
        "name": "set payload",
        "func": "msg.payload = [{}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 1280,
        "wires": [
            [
                "79a3dce739fb254c"
            ]
        ]
    },
    {
        "id": "1ab1c78c0bc54305",
        "type": "http response",
        "z": "33d8cc1cde209e15",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 660,
        "y": 1280,
        "wires": []
    }
]
